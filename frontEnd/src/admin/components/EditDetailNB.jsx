import React, { useState, useEffect } from 'react';
import { useParams } from 'react-router-dom';
import Navadmin from './Navadmin';
import Slidebaradmin from './Sideberadmin';
import axios from 'axios';
import Swal from 'sweetalert2';


function EditDetailNB() {
    const { laptopTag } = useParams(); // ‡∏î‡∏∂‡∏á laptopTag ‡∏à‡∏≤‡∏Å URL
    const [formData, setFormData] = useState({
        laptop_tag: '',
        brand: '',
        model: '',
        serial_number: '',
        cpu: '',
        ram: '',
        storage: '',
        storage_type: '',
        gpu: '',
        display: '',
        os: '',
        insurance_date: '',
        warranty_expiry_date: '',
        price: '',
        number: '',
        status: ''
    });
    const [originalData, setOriginalData] = useState(null); // ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö
    const [isEditing, setIsEditing] = useState(false);

    useEffect(() => {
        if (laptopTag) {
            fetch(`http://10.198.200.35:5002/dataEditSN?laptop_tag=${laptopTag}`)
                .then((response) => {
                    if (!response.ok) {
                        throw new Error('Network response was not ok');
                    }
                    return response.json();
                })
                .then((data) => {
                    const formattedData = {
                        laptop_tag: data.laptop_tag || '',
                        brand: data.brand || '',
                        model: data.model || '',
                        serial_number: data.serial_number || '',
                        cpu: data.cpu || '',
                        ram: data.ram || '',
                        storage_type: data.storage_type || '',
                        storage: data.storage || '',
                        gpu: data.gpu || '',
                        display: data.display || '',
                        os: data.os || '',
                        insurance_date: data.insurance_date ? formatDate(data.insurance_date) : '',
                        warranty_expiry_date: data.warranty_expiry_date ? formatDate(data.warranty_expiry_date) : '',
                        price: data.price || '',
                        number: data.number || '',
                        status: data.status || ''
                    };

                    setFormData(formattedData);
                    setOriginalData(formattedData); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ñ‡πà‡∏≤ originalData ‡∏î‡πâ‡∏ß‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö
                })
                .catch((error) => {
                    console.error('Error fetching laptop data:', error);
                });
        }
    }, [laptopTag]);

    const handleChange = (e) => {
        const { name, value } = e.target;
        setFormData((prevData) => ({
            ...prevData,
            [name]: value
        }));
        setIsEditing(true); // ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
    };

    const handleSave = async (e) => {
        e.preventDefault();
    
        if (!isEditing || !originalData) return;
    
        const updatedData = {};
        Object.keys(formData).forEach((key) => {
            if (formData[key] !== originalData[key] && formData[key] !== "") {
                updatedData[key] = formData[key];
            }
        });
    
        if (Object.keys(updatedData).length === 0) {
            Swal.fire({
                icon: "info",
                title: "‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á",
                text: "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å",
                confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á",
            });
            return;
        }
    
        // üî• ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
        const result = await Swal.fire({
            title: "‡∏Ñ‡∏∏‡∏ì‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?",
            text: "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "‡πÉ‡∏ä‡πà, ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏•‡∏¢!",
            cancelButtonText: "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å",
        });
    
        if (!result.isConfirmed) return;
    
        updatedData.laptop_tag = laptopTag; // ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ laptop_tag ‡πÄ‡∏™‡∏°‡∏≠
    
        axios
            .post(`http://10.198.200.35:5002/editDetailNB`, updatedData)
            .then((response) => {
                console.log("Laptop details updated:", response.data);
    
                Swal.fire({
                    icon: "success",
                    title: "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!",
                    text: "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡πâ‡∏ß",
                    confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á",
                });
    
                setOriginalData(formData); // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï originalData ‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î
                setIsEditing(false);
                
            })
            .catch((error) => {
                console.error("Error saving data:", error);
    
                Swal.fire({
                    icon: "error",
                    title: "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î",
                    text: "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏î‡πâ",
                    confirmButtonText: "‡∏ï‡∏Å‡∏•‡∏á",
                });
            });
            window.history.back(); // ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
    };
    
    const toggleEditMode = () => {
        setIsEditing((prev) => !prev);
    };

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô formatDate ‡∏ó‡∏µ‡πà‡πÅ‡∏õ‡∏•‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö YYYY-MM-DD
    const formatDate = (date) => {
        if (!date) return '';
        const d = new Date(date);
        const year = d.getFullYear();
        const month = String(d.getMonth() + 1).padStart(2, '0'); // ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ï‡πâ‡∏≠‡∏á +1 ‡πÅ‡∏•‡∏∞‡πÄ‡∏ï‡∏¥‡∏° 0 ‡∏´‡∏≤‡∏Å‡∏°‡∏µ 1 ‡∏´‡∏•‡∏±‡∏Å
        const day = String(d.getDate()).padStart(2, '0'); // ‡πÄ‡∏ï‡∏¥‡∏° 0 ‡∏´‡∏≤‡∏Å‡∏°‡∏µ 1 ‡∏´‡∏•‡∏±‡∏Å
        return `${day}-${month}-${year}`;
    };

    
      

    return (
        <div className="flex bg-LightGray flex-col min-h-screen">
            <Navadmin />
            <div className="flex flex-1">
                <Slidebaradmin />
                <div className="flex-1 p-12">
                    <div className="flex justify-center items-start mt-5">
                        <div className="w-full max-w-5xl">
                            <h1 className="text-3xl mb-6 text-center font-sans text-blue mt-10">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÇ‡∏ô‡πâ‡∏ï‡∏ö‡∏∏‡πä‡∏Å (‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÇ‡∏ô‡πâ‡∏ï‡∏ö‡∏∏‡πä‡∏Å)</h1>

                            <div className="bg-white border border-gray-300 rounded-lg p-6 shadow-lg">
                                <form onSubmit={handleSave}>
                                    <h2 className="text-xl font-sans mb-4">‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÇ‡∏ô‡πä‡∏ï‡∏ö‡∏∏‡πä‡∏Ñ</h2>

                                    <div className="flex space-x-4 mb-4">
                                        <div className="w-1/2">
                                            <label className="block text-gray-700 font-sans text-sm mb-2" htmlFor="brand">
                                                ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á (Laptop Tag) :
                                            </label>
                                            <input
                                                id="brand"
                                                name="brand"
                                                type="text"
                                                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠‡πÇ‡∏ô‡πä‡∏ï‡∏ö‡∏∏‡πä‡∏Ñ"
                                                className="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                                readOnly
                                                value={formData.laptop_tag}
                                                onChange={handleChange}
                                                disabled={!isEditing} // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                                            />
                                        </div>
                                        <div className="w-1/2">
                                            <label className="block text-gray-700 font-sans text-sm mb-2" htmlFor="brand">
                                                ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á :
                                            </label>
                                            <input
                                                id="brand"
                                                name="brand"
                                                type="text"
                                                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏¢‡∏µ‡πà‡∏´‡πâ‡∏≠‡πÇ‡∏ô‡πä‡∏ï‡∏ö‡∏∏‡πä‡∏Ñ"
                                                className="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                                readOnly
                                                value={formData.brand}
                                                onChange={handleChange}
                                                disabled={!isEditing} // ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÑ‡∏î‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                                            />
                                        </div>

                                        <div className="w-1/2">
                                            <label className="block text-gray-700 font-sans text-sm mb-2" htmlFor="model">
                                                ‡∏£‡∏∏‡πà‡∏ô‡πÇ‡∏ô‡πä‡∏ï‡∏ö‡∏∏‡πä‡∏Ñ (Model) :
                                            </label>
                                            <input
                                                id="model"
                                                name="model"
                                                type="text"
                                                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏∏‡πà‡∏ô‡πÇ‡∏ô‡πä‡∏ï‡∏ö‡∏∏‡πä‡∏Ñ"
                                                className="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                                required
                                                value={formData.model}
                                                onChange={handleChange}
                                                disabled={!isEditing}
                                            />
                                        </div>
                                    </div>

                                    <div className="flex space-x-4 mb-4">
                                        <div className="w-1/3">
                                            <label className="block text-gray-700 font-sans text-sm mb-2" htmlFor="serial">
                                                ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ã‡∏µ‡πÄ‡∏£‡∏µ‡∏¢‡∏• (Serial Number) :
                                            </label>
                                            <input
                                                id="serial_number"
                                                name="serial_number"
                                                type="text"
                                                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏ã‡∏µ‡πÄ‡∏£‡∏µ‡∏¢‡∏•"
                                                className="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                                required
                                                value={formData.serial_number}
                                                onChange={handleChange}
                                                disabled={!isEditing}
                                            />
                                        </div>

                                        <div className="w-1/3">
                                            <label className="block text-gray-700 font-sans text-sm mb-2" htmlFor="cpu">
                                                ‡∏ã‡∏µ‡∏û‡∏µ‡∏¢‡∏π (cpu) :
                                            </label>
                                            <input
                                                id="cpu"
                                                name="cpu"
                                                type="text"
                                                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ã‡∏µ‡∏û‡∏µ‡∏¢‡∏π (cpu)"
                                                className="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                                required
                                                value={formData.cpu}
                                                onChange={handleChange}
                                                disabled={!isEditing}
                                            />
                                        </div>

                                        <div className="w-1/3">
                                            <label className="block text-gray-700 font-sans text-sm mb-2" htmlFor="ram">
                                                ‡πÅ‡∏£‡∏° (RAM Size) :
                                            </label>
                                            <input
                                                id="ram"
                                                name="ram"
                                                type="text"
                                                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• RAM Size"
                                                className="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                                required
                                                value={formData.ram}
                                                onChange={handleChange}
                                                disabled={!isEditing}
                                            />
                                        </div>
                                    </div>

                                    {/* ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 4: storage_size, storage_type, gpu */}
                                    <div className="flex space-x-4 mb-4">
                                        <div className="w-1/3">
                                            <label className="block text-gray-700 font-sans text-sm mb-2" htmlFor="storage">
                                                ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• (Storage) :
                                            </label>
                                            <input
                                                id="storage"
                                                name="storage"
                                                type="text"
                                                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Storage "
                                                className="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                                required
                                                value={formData.storage}
                                                onChange={handleChange}
                                                disabled={!isEditing}
                                            />
                                        </div>

                                        {/* <div className="w-1/3">
                                            <label className="block text-gray-700 font-sans text-sm mb-2" htmlFor="storage_type">
                                                ‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏Ç‡∏≠‡∏á‡∏´‡∏ô‡πà‡∏ß‡∏¢‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≥ (Storage Type) :
                                            </label>
                                            <input
                                                id="storage_type"
                                                name="storage_type"
                                                type="text"
                                                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Storage Type"
                                                className="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                                required
                                                value={formData.storage_type}
                                                onChange={handleChange}
                                            />
                                        </div> */}

                                        <div className="w-1/3">
                                            <label className="block text-gray-700 font-sans text-sm mb-2" htmlFor="gpu">
                                                ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏à‡∏≠ (GPU) :
                                            </label>
                                            <input
                                                id="gpu"
                                                name="gpu"
                                                type="text"
                                                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• GPU"
                                                className="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                                required
                                                value={formData.gpu}
                                                onChange={handleChange}
                                                disabled={!isEditing}
                                            />
                                        </div>
                                        <div className="w-1/4">
                                            <label className="block text-gray-700 font-sans text-sm mb-2" htmlFor="display">
                                                ‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠ (Display Size) :
                                            </label>
                                            <input
                                                id="display"
                                                name="display"
                                                type="text"
                                                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠"
                                                className="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                                required
                                                value={formData.display}
                                                onChange={handleChange}
                                                disabled={!isEditing}
                                            />
                                        </div>

                                        <div className="w-1/3">
                                            <label className="block text-gray-700 font-sans text-sm mb-2" htmlFor="os">
                                                ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£ (OS) :
                                            </label>
                                            <input
                                                id="os"
                                                name="os"
                                                type="text"
                                                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡∏£‡∏∞‡∏ö‡∏ö‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£"
                                                className="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                                required
                                                value={formData.os}
                                                onChange={handleChange}
                                                disabled={!isEditing}
                                            />
                                        </div>
                                    </div>

                                    {/* ‡πÅ‡∏ñ‡∏ß‡∏ó‡∏µ‡πà 5: display_size, os, price */}
                                    <div className="flex space-x-4 mb-4">
                                        

                                        {/* <div className="w-1/3">
                                            <label className="block text-gray-700 font-sans text-sm mb-2" htmlFor="price">
                                                ‡∏£‡∏≤‡∏Ñ‡∏≤ (Price) :
                                            </label>
                                            <input
                                                id="price"
                                                name="price"
                                                type="number"
                                                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏≤‡∏Ñ‡∏≤"
                                                className="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                                readOnly
                                                value={formData.price}
                                                onChange={handleChange}
                                            />
                                        </div> */}
                                    </div>

                                    {/* ‡πÄ‡∏™‡πâ‡∏ô‡∏Å‡∏±‡∏ô‡∏™‡∏µ‡πÄ‡∏ó‡∏≤ */}
                                    <div className="h-4 border-t-2 border-gray-300 mt-6"></div>

                                    {/* ‡∏ä‡πà‡∏≠‡∏á‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô */}
                                    {/* <div className="flex space-x-4 mb-4"> */}
                                    {/* ‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô */}
                                    {/* <div className="w-1/2">
                                            <label className="block text-gray-700 font-sans text-sm mb-2" htmlFor="insurance_date">
                                                ‡∏ß‡∏±‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô (Insurance Start Date) :
                                            </label>
                                            <input
                                                id="insurance_date"
                                                name="insurance_date"
                                                type="date"
                                                className="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                                readOnly                                                
                                                value={formData.insurance_date}
                                                onChange={handleChange}
                                            />
                                        </div> */}

                                    {/* ‡∏ß‡∏±‡∏ô‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô */}
                                    {/* <div className="w-1/2">
                                            <label className="block text-gray-700 font-sans text-sm mb-2" htmlFor="warranty_expiry_date">
                                                ‡∏ß‡∏±‡∏ô‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏õ‡∏£‡∏∞‡∏Å‡∏±‡∏ô (Warranty Expiry Date) :
                                            </label>
                                            <input
                                                id="warranty_expiry_date"
                                                name="warranty_expiry_date"
                                                type="date"
                                                className="w-full p-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
                                                readOnly
                                                value={formData.warranty_expiry_date}
                                                onChange={handleChange}
                                            />
                                        </div>
                                    </div> */}

                                    <div className="flex justify-end space-x-4">
                                        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö */}
                                        {/* <button
                                            type="button"
                                            onClick={handleDelete} // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏•‡∏¥‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö
                                            className="bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600"
                                        >
                                            ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                                        </button> */}
                                        {/* ‡∏õ‡∏∏‡πà‡∏°‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç */}
                                        <button
                                            type="submit"
                                            disabled={!isEditing}
                                            className={`${
                                                isEditing ? 'bg-blue3 hover:bg-blue3' : 'bg-blue3-300 cursor-not-allowed'
                                            } text-white px-4 py-2 rounded-lg`}
                                        >
                                            ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                                        </button>

                                        <button
                                            type="button"
                                            onClick={toggleEditMode} // ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÇ‡∏´‡∏°‡∏î‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÅ‡∏•‡∏∞‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                                            className={`${isEditing ? 'bg-yellow-300' : 'bg-yellow-400'
                                                } text-black px-4 py-2 rounded-lg hover:bg-yellow-500`}
                                        >
                                            {isEditing ? '‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏Å‡∏≤‡∏£‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç' : '‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'}
                                        </button>
                                        
                                        {/* <button
                                            type="button"
                                            onClick={handleDelete}
                                            // disabled={!isEditing}
                                            className="bg-red-500 text-white px-4 py-2 rounded-lg hover:bg-red-600"
                                        >
                                            ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
                                        </button> */}

                                        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö */}
                                        <button
                                            type="button"
                                            onClick={() => window.history.back()}
                                            className="bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600"
                                        >
                                            ‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö
                                        </button>

                            
                                    </div>

                                </form>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
}

export default EditDetailNB;
